[INFO] 2019-5-8 23:2:41 (0) RETURN:
0 
(function() {
  var GYwsGo, GYwsNextC, GYwsNextR, a, err, g_yws_dir, g_yws_map, g_yws_map_c, g_yws_map_r, g_yws_map_sc, g_yws_map_sr, left, log, right, step, turn;

  g_yws_map = [];

  g_yws_map_r = 0;

  g_yws_map_c = 0;

  g_yws_dir = 0;

  g_yws_map_sr = 0;

  g_yws_map_sc = 0;

  GYwsNextC = function(c) {
    if (g_yws_dir % 2 === 0) {
      return c;
    } else if (g_yws_dir < 2) {
      return c + 1;
    } else {
      return c - 1;
    }
  };

  GYwsNextR = function(r) {
    if (g_yws_dir % 2 === 1) {
      return r;
    } else if (g_yws_dir < 1) {
      return r - 1;
    } else {
      return r + 1;
    }
  };

  GYwsGo = function() {
    if (g_yws_map[GYwsNextR(g_yws_map_sr)][GYwsNextC(g_yws_map_sc)] === 1) {
      console.log('YGo0');
    } else {
      console.log('YGo1');
      g_yws_map[g_yws_map_sr][g_yws_map_sc] -= 10;
      g_yws_map_sr = GYwsNextR(g_yws_map_sr);
      g_yws_map_sc = GYwsNextC(g_yws_map_sc);
      g_yws_map[g_yws_map_sr][g_yws_map_sc] += 10;
      if (g_yws_map[g_yws_map_sr][g_yws_map_sc] % 10 === 5) {
        throw 'YExit1';
      } else if (g_yws_map[g_yws_map_sr][g_yws_map_sc] % 10 === 3) {
        throw 'YExit2';
      }
    }
  };

  step = function(x) {
    var i, j, ref, results;
    results = [];
    for (i = j = 1, ref = x; 1 <= ref ? j <= ref : j >= ref; i = 1 <= ref ? ++j : --j) {
      results.push(GYwsGo());
    }
    return results;
  };

  right = 90;

  left = 270;

  turn = function(x) {
    if (x === 90) {
      console.log('YTurnR');
      g_yws_dir = g_yws_dir + 1;
      if (g_yws_dir > 3) {
        return g_yws_dir = 0;
      }
    } else if (x === 270) {
      console.log('YTurnL');
      g_yws_dir = g_yws_dir - 1;
      if (g_yws_dir < 0) {
        return g_yws_dir = 3;
      }
    } else {
      return 1 === 1;
    }
  };

  Number.prototype.times = function(fn) {
    var j, ref, results;
    if (this.valueOf()) {
      results = [];
      for (j = 1, ref = this.valueOf(); 1 <= ref ? j <= ref : j >= ref; 1 <= ref ? j++ : j--) {
        results.push(fn());
      }
      return results;
    }
  };

  log = function(x) {
    return console.log('YLog ' + x);
  };

  g_yws_map_r = 6;

  g_yws_map_c = 7;

  g_yws_map[0] = [1, 1, 1, 1, 1, 1, 1];

  g_yws_map[1] = [1, 1, 1, 0, 0, 0, 1];

  g_yws_map[2] = [1, 1, 1, 9, 1, 0, 1];

  g_yws_map[3] = [1, 1, 1, 1, 1, 0, 1];

  g_yws_map[4] = [1, 5, 0, 0, 0, 0, 1];

  g_yws_map[5] = [1, 1, 1, 1, 1, 1, 1];

  g_yws_map_sr = 2;

  g_yws_map_sc = 3;

  try {
    a = 1;
    3..times(function() {
      log("time: " + a);
      turn(right);
      return a = a + 1;
    });
  } catch (_error) {
    err = _error;
    console.log(err);
  }

}).call(this);

